import React from 'react';
import { Link } from 'react-router-dom';
import { getData, getItem } from '../../js/script';

class Cart extends React.Component {

  constructor(props) {
    super(props);
    this.state = {
      productsInfo: {},
    };
  }

  componentDidMount() {
    this.fetchProductsInfo();
  }

  componentDidUpdate(prevProps) {
    if (prevProps.cart !== this.props.cart) {
      this.fetchProductsInfo();
    }
  }

  fetchProductsInfo() {
    const { cart } = this.props;

    if (!cart || !cart.length) {
      return;
    }
    const { productsInfo } = this.state;

    let newProductsInfo = {};
    let productsInfoPromises = [];
    cart.forEach(item => productsInfoPromises.push(getItem(item.id)));
    Promise.all(productsInfoPromises).then(values => {

      values.forEach((value) => {
        const id = value.data.id;
        newProductsInfo[id] = value.data;
      });

      this.setState({
        productsInfo: {
          ...productsInfo,
          ...newProductsInfo,
        }
      })
    });
  }

  removeItem(item) {
    const { cart, changeCart, } = this.props;

    if (!cart || cart.length < 2) {
      this.props.emptyCart();
    } else {
      this.props.changeCart(item.id, item.size, 0);
    }
  }

  render() {
    const { cart, cartId, changeCart } = this.props;
    const { productsInfo } = this.state;
    if (!cart || !cart.length) return null;

    return (
      <div className="hidden-panel__basket basket-dropped hidden-panel__basket_visible">
        {cart.length ? (
          <div className="basket-dropped__title">В вашей корзине:</div>
        ) : null}
        <div
          className={`basket-dropped__product-list ${
            cart.length <= 3 ? 'product-list_less' : 'product-list'
          } `}
        >
          {cart.length ? (
            cart.map((item, i) => {

              if (!productsInfo[item.id]) {
                return null;
              }

              return (
                <div className="product-list__item" key={i}>
                  <a
                    className="product-list__pic"
                    style={{
                      backgroundImage: `url(${productsInfo[item.id].images[0]})`,
                      backgroundRepeat: 'no-repeat',
                      backgroundPosition: 'center center',
                      backgroundSize: 'cover',
                    }}
                  />
                  <Link
                    to={`/item/${item.id}`}
                    className="product-list__product"
                  >
                    {`${productsInfo[item.id].title}, (размер ${item.size}), ${item.amount} шт.`}
                  </Link>
                  <div className="product-list__fill" />
                  <div className="product-list__price">
                    {productsInfo[item.id].price * item.amount}
                    <i className="fa fa-rub" aria-hidden="true" />
                  </div>
                  <div className="product-list__delete">
                    <i
                      className="fa fa-times"
                      aria-hidden="true"
                      onClick={() => this.removeItem(item)}
                    />
                  </div>
                </div>
              );
            })
          ) : (
            <div className="product-list__item">
              <p>
                В корзине пока ничего нет. Не знаете, с чего начать? Посмотрите
                наши новинки!
              </p>
            </div>
          )}
        </div>
        {cart.length ? (
          <Link
            className="basket-dropped__order-button"
            to="/order/"
            // onClick={this.props.update}
          >
            Оформить заказ
          </Link>
        ) : null}
      </div>
    );
  }
}

export default Cart;